// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© ZenAndTheArtOfTrading / www.PineScriptMastery.com
// @version=5
indicator("Bollinger Bands", overlay=true)

// Get user input
upperBandSD = input.float(title="Upper Band Std Dev", defval=3.0, tooltip="Upper band's standard deviation multiplier")
lowerBandSD = input.float(title="Lower Band Std Dev", defval=1.0, tooltip="Lower band's standard deviation multiplier")
maPeriod    = input.int(title="Middle Band MA Length", defval=100, tooltip="Middle band's SMA period length")

// Get Bollinger Bands
[bbIgnore1, bbHigh, bbIgnore2] = ta.bb(close, maPeriod, upperBandSD)
[bbMid, bbIgnore3, bbLow]      = ta.bb(close, maPeriod, lowerBandSD)

// Prepare trade persistent variables
var inTrade = false
drawEntry   = false
drawExit    = false

// Detect bollinger breakout
if close > bbHigh and not inTrade and barstate.isconfirmed
    inTrade   := true
    drawEntry := true

// Detect bollinger sell signal
if close < bbLow and inTrade and barstate.isconfirmed
    inTrade  := false
    drawExit := true

// Draw bollinger bands
plot(bbMid, color=color.blue, title="Middle SMA")
plot(bbHigh, color=color.green, title="Upper Band")
plot(bbLow, color=color.red, title="Lower Band")

// Draw signals
plotshape(drawEntry, style=shape.triangleup, color=color.green, location=location.belowbar, size=size.normal, title="Buy Signal")
plotshape(drawExit, style=shape.xcross, color=color.red, location=location.belowbar, size=size.normal, title="Sell Signal")

// Generate alerts
alertcondition(drawEntry, "BBO Buy", "Bollinger breakout detected for {{ticker}} at price: {{close}}")
alertcondition(drawExit, "BBO Sell", "Bollinger sell detected for {{ticker}} at price: {{close}}")
alertcondition(drawEntry or drawExit, "BBO Signal", "Bollinger signal detected for {{ticker}} at price: {{close}}")